<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd"
default-autowire="byName"
>

    <!-- コメントの方法でbean配置する -->
    <context:annotation-config />

    <!--  -->
    <context:component-scan base-package="jp.co.profit_cube.fusion.stock" />

    <aop:aspectj-autoproxy  proxy-target-class="true"/>
    
    <context:property-placeholder location="classpath:spring/jdbc.properties" />
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="minIdle" value="${jdbc.minIdle}"></property>
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>
        <property name="maxWait" value="${jdbc.maxWait}"></property>
        <property name="maxActive" value="${jdbc.maxActive}"></property>
        <property name="initialSize" value="${jdbc.initialSize}"></property>
    </bean>
    
<!-- ========================= TRANSACTION DEFINITIONS ========================= -->
    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 配置SqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"><ref bean="dataSource"/></property>
    </bean>
    
    <bean id="RBrandMapper" class="jp.co.profit_cube.fusion.stock.dao.impl.RBrandMapperImpl">
      <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean name="RBrandService" class="jp.co.profit_cube.fusion.stock.services.impl.RBrandServiceImpl">
        <property name="rBrandMapper" ref="RBrandMapper" /> 
    </bean>

    <!-- トランザクション定義でSpringアノテーション利用を宣言する。 -->
    <!-- 
	<tx:annotation-driven transaction-manager="transactionManager"
      proxy-target-class="false" />
      -->

      <!-- 
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="autoCommitOnClose" value="true" />
    </bean>
    -->
    <!-- JNDIルックアップ型 -->
    <!-- JBoss利用時は、comp/env/の記述は不要 -->
	<!--  
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/localDB"></jee:jndi-lookup>
    -->
    <!-- MyBatis -->

    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->    

    <!-- enable autowire -->

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />


    
    <!-- DAO定義 MyBatis -->
    <!-- 
    <bean id="mapDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
      <property name="sqlSessionFactory" ref="sqlSessionFactory" />
      <property name="mapperInterface" value="jp.co.profit_cube.fusion.stock.mappers.RBrandMapper" />
    </bean>

    <bean name="RBrandService" class="jp.co.profit_cube.fusion.stock.services.impl.RBrandServiceImpl">
        <property name="rBrandMapper" ref="mapDAO" /> 
    </bean>

    <bean name="StockBrandReviewDTO" class="jp.co.profit_cube.fusion.stock.dto.StockBrandReviewDTO" />
    
    <bean name="StockBrandReviewAction" class="jp.co.profit_cube.fusion.stock.controllers.StockBrandReviewAction">
        <property name="rBrandService" ref="RBrandService" />
        <property name="stockBrandReviewDTO" ref="StockBrandReviewDTO" /> 
    </bean>
     -->
    <!-- scan for mappers and let them be autowired -->
    <!-- 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jp.co.profit_cube.fusion.stock.mappers" />
    </bean>
     -->
</beans>
